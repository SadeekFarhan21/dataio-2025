---
format: 
  html:
    code-fold: true
    code-wrap: true
    code-overflow: wrap
    code-tools: true
    tidy: true
    theme: litera
execute:
  echo: true
  warning: false
mainfont: Helvetica
editor_options:
  markdown:
    wrap: sentence
    canonical: true

page-footer: |
  Â© 2025 Team Janardhan. All Rights Reserved.
---

```{=html}
<style>
@import url('https://fonts.googleapis.com/css2?family=Funnel+Sans:ital,wght@0,300..800;1,300..800&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Figtree:ital,wght@0,300..900;1,300..900&family=Fragment+Mono:ital@0;1&display=swap');

p {
  font-family: 'Funnel Sans';
}

pre, code {
  font-family: 'Fragment Mono';
  font-size: 14px;
}
</style>
```

```{r, include=FALSE}
#Practice EDA
library(skimr)
df = mtcars
df$vs = factor(df$vs)
df$am = factor(df$am)
skim(df)

library(DataExplorer)
introduce(df)
plot_intro(df)
plot_missing(df)
plot_histogram(df)
```

```{r}
#Importing given datasets
library(readr)
library(base)
global <- read_csv("datasets/global air pollution dataset.csv")
canada <- read_csv("datasets/Canada/CO2 Emissions_Canada.csv")
cement <- read.csv("~/Documents/DataIO25/datasets/Cement_emissions.csv", header=FALSE, comment.char="#")
```

```{r,include=FALSE}
#EDA on Canada
plot_intro(canada)
unique(canada$Make)
unique(canada$Model)
unique(canada$`Vehicle Class`)
unique(canada$`Engine Size(L)`)
unique(canada$Cylinders)

#Cylinders vs CO2 Emissions
library(ggplot2)
ggplot(canada, aes(x=Cylinders, y=`CO2 Emissions(g/km)`)) + geom_point() + geom_jitter()
plot(canada$Cylinders, canada$`CO2 Emissions(g/km)`)

#Fuel consumption vs co2 emissions
plot(canada$`Fuel Consumption Comb (mpg)`, canada$`CO2 Emissions(g/km)`)
plot(log(canada$`Fuel Consumption Comb (mpg)`), log(canada$`CO2 Emissions(g/km)`))
canada.lm = lm(log(`CO2 Emissions(g/km)`) ~ log(`Fuel Consumption Comb (mpg)`), data = canada)
plot(canada.lm$fitted.values, canada.lm$residuals)
cor(canada$Cylinders, canada$`CO2 Emissions(g/km)`)

#Fuel consumption and engine type vs emissions
ggplot(canada, aes(x = log(`Fuel Consumption Comb (mpg)`), 
                    y = log(`CO2 Emissions(g/km)`), 
                    color = `Engine Size(L)`)) +
  geom_point() +
  scale_color_gradient(low = "blue", high = "red") + 
  labs(x = "Log Fuel Consumption (mpg)", 
       y = "Log CO2 Emissions (g/km)", 
       color = "Engine Size (L)") +
  theme_minimal()

plot(canada$`Engine Size(L)` ,log(canada$`CO2 Emissions(g/km)`) - canada.lm$fitted.values)

#Fuel consumption and fuel type vs emissions
ggplot(canada, aes(x = log(`Fuel Consumption Comb (mpg)`), 
                    y = log(`CO2 Emissions(g/km)`), 
                    color = `Fuel Type`)) +
  geom_point() +
  labs(x = "Log Fuel Consumption (mpg)", 
       y = "Log CO2 Emissions (g/km)", 
       color = "Fuel Type") +
  theme_minimal()

#Fuel consumption and fuel type vs emissions
ggplot(canada, aes(x = log(`Engine Size(L)`), 
                    y = log(`CO2 Emissions(g/km)`), 
                    color = `Fuel Type`)) +
  geom_point() +
  labs(x = "Log Fuel Consumption (mpg)", 
       y = "Log CO2 Emissions (g/km)", 
       color = "Fuel Type") +
  theme_minimal()

#Engine Size vs fuel consumption
plot(log(canada$`Engine Size(L)`), log(canada$`Fuel Consumption Comb (mpg)`))
cor(log(canada$`Engine Size(L)`), log(canada$`Fuel Consumption Comb (mpg)`))
```

```{r}
#Fuel consumption and fuel type vs emissions
ggplot(canada, aes(x = log(`Fuel Consumption Comb (mpg)`), 
                    y = log(`CO2 Emissions(g/km)`), 
                    color = `Fuel Type`)) +
  geom_point() +
  labs(x = "Log Fuel Consumption (mpg)", 
       y = "Log CO2 Emissions (g/km)", 
       color = "Fuel Type") +
  theme_minimal()
```
